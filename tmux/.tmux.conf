# always load the reset file first
source-file ~/.tmux.reset.conf

# ===============
# = General
# ===============

set -g default-terminal "screen-256color"

set -s escape-time 0
set -g base-index 1

set -g renumber-windows on
set -g automatic-rename on



# ===============
# = Binds
# ===============

bind r source-file ~/.tmux.conf \; display "Config reloaded"

# Note: want new windows, panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '|' split-window -h -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
unbind '%'
unbind '"'

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
bind C-q confirm-before -p "kill other sessions? (y/n)" "kill-session -a"

# Create new session
bind S command-prompt -p "new-session" "new-session -A -s '%%'"

#bind & "run-shell 'tmux select-window -n || tmux switch-client -n \; tmux kill-window -t \"#W\"'"

# Vim style pane selection ...
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# ... and pane resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

bind -n C-Space choose-session

# Hide status bar on demand
bind -n C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
  'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
  'display "Session has only 1 client attached"'

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind -n C-u command-prompt -p "Session to merge with: " \
  "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"



# ===============
# = Mouse, keyboard
# = (see https://unix.stackexchange.com/a/318285)
# ===============

# vim <3
set-window-option -g mode-keys vi

# enable mouse mode
set -g mouse on

# add half-page scroll wheel controls for copy mode
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down

# allow copying with mouse
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"



# ===============
# = Appearance
# ===============

color_black="black"
color_white="white"
color_purple="colour55"
#color_violet="colour60"
color_violet="colour183"
color_light_grey="colour8"
color_yellow="colour228"

color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="$color_light"
color_status_bg="$color_purple"
color_main="$color_violet"
color_secondary="$color_yellow"
#color_level_ok="$color_green"
#color_level_warn="$color_yellow"
#color_level_stress="$color_red"
color_window_status_bg="$color_light_grey"
color_window_status_current_bg="$color_main"
color_status_off_bg="$color_secondary"
color_window_off_status_bg="$color_light_grey"
color_window_off_status_current_bg="$color_secondary"

set -g status-position bottom
set -g status-justify centre
set -g status-interval 1
set -g status-bg "$color_dark"
set -g status-fg "$color_main"
set -g status-left "#{prefix_highlight}#[bg=$color_status_bg]#[fg=$color_status_text] #S "
set -g status-right ""

set -g message-style "fg=$color_main,bg=$color_dark"

setw -g window-status-activity-style "fg=$color_main,bg=$color_dark"

setw -g window-status-format "#[fg=$color_dark,bg=$color_window_status_bg]▓▒░ #W ░▒▓"
setw -g window-status-current-format "#[fg=$color_dark,bold,bg=$color_window_status_current_bg]▓▒░ #W ░▒▓"
setw -g window-status-separator ""

set -g mode-style bg="$color_secondary",fg="$color_dark"

set -g pane-border-style fg="brightblack"
set -g pane-active-border-style fg="$color_main"



# ===============
# = Plugins
# ===============
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @prefix_highlight_bg 'colour141'



# ===============
# = Nesting local and remote sessions
# = see https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# ===============

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
  'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-left "#{prefix_highlight}#[bg=$color_yellow]#[fg=$color_dark] #S# " \;\
  set window-status-current-format "#[fg=$color_dark,bg=$color_window_off_status_current_bg,bold]▓▒░ #W# ░▒▓" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\
  #set status-bg "$color_status_off_bg" \;\
  #set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  #set window-status-current-format "#[fg=$color_dark,bold,bg=$color_yellow]▓▒░ #W ░▒▓"  \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-left \;\
  set -u window-status-format \;\
  set -u window-status-current-format \;\
  refresh-client -S
  #set -u status-bg \;\
  #set -u window-status-current-style \;\




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
